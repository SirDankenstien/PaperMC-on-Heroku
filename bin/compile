#!/bin/sh

set -eu

indent() {
  sed -u 's/^/       /'
}

export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|JAVA_OPTS)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

BP_DIR="$(cd "$(dirname "$0")" && pwd)"
BUILD_DIR=$1
CACHE_DIR=$2
OPT_DIR=$BP_DIR/../opt/

export_env_dir $3

APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"

mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"

echo "~ sir.dank was here xP"
echo "---- Spigot on Heroku ----"
echo "-----> Update and Upgrading system files..."
apt-get $APT_OPTIONS update | indent
echo "done"
echo "-----> Installing stuffs... "
apt-get $APT_OPTIONS -y --force-yes -d install --reinstall libio-socket-ssl-perl | indent
echo "-----> Installing S3CMD... "
apt-get $APT_OPTIONS -y --force-yes -d install --reinstall s3cmd | indent
echo "-----> Installing screen... "
apt-get $APT_OPTIONS -y --force-yes -d install --reinstall screen | indent
echo "-----> Installing nano... "
apt-get $APT_OPTIONS -y --force-yes -d install --reinstall nano | indent
echo "-----> Installing DDClient... "
apt-get $APT_OPTIONS -y --force-yes -d install --reinstall ddclient | indent
sleep 3
echo "-----> Almost there..."
mkdir -p $BUILD_DIR/.apt/var/run/screen

mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/000_apt.sh
export PATH="\$HOME/.apt/usr/bin:\$PATH"
export LD_LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LIBRARY_PATH"
export INCLUDE_PATH="\$HOME/.apt/usr/include:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
export PKG_CONFIG_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/i386-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"
export PYTHONPATH="\$HOME/.apt/usr/lib/python2.7/dist-packages"
export SCREENDIR="\$HOME/.apt/var/run/screen"
EOF

for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  dpkg -x $DEB $BUILD_DIR/.apt/
done

minecraft_url="https://papermc.io/api/v1/paper/1.16.4/latest/download"
echo -n "-----> Installing Spigot ${minecraft_version}... "
curl -o spigot.jar -s -L $minecraft_url
mv spigot.jar $BUILD_DIR/spigot.jar
echo "done"
if [ -n "${MINECRAFT_EULA:-""}" ]; then
  echo -n "-----> Accepting Minecraft EULA... "
  echo "eula=true" >> $BUILD_DIR/eula.txt
  echo "done"
fi

mkdir -p $BUILD_DIR/bin
[ ! -f $BUILD_DIR/dropbox ]     && cp $OPT_DIR/dropbox $BUILD_DIR/
[ ! -f $BUILD_DIR/uploader ]     && cp $OPT_DIR/uploader $BUILD_DIR/
[ ! -f $BUILD_DIR/uploader_second ]     && cp $OPT_DIR/uploader_second $BUILD_DIR/

mv $OPT_DIR/panel $BUILD_DIR/panel
mv $OPT_DIR/index.php $BUILD_DIR/index.php

chmod +x $BUILD_DIR/dropbox
chmod +x $BUILD_DIR/uploader
chmod +x $BUILD_DIR/uploader_second
chmod 777 -R $BUILD_DIR/panel/
chmod +x $BUILD_DIR/index.php

echo ""
echo ""
echo "!!----- WARNING -----!!"
echo "Insert heroku ps:scale worker=1"
echo "in dorder to run the server"
echo "---------<o/-----------"
echo ""
echo ""
echo "-----> Installation completed! <-----"
